#c02z01:請問你目前有工作嗎? 1:有 2、3:家庭主婦、4:無
##only consider work at market(1).
# %>% mutate(work = if_else(c02z01 == 1, 1, 0))
PSFD2016$work <- PSFD2016$c02z01 == 1
PSFD2016$work <- as.integer(PSFD2016$work)
#calculate age
##a02a01:請問你是民國幾年出生
##訪問年分=2016 = 民國105年)
PSFD2016$age <- 105 - PSFD2016$a02a01 + 1
#c02z01:請問你目前有工作嗎? 1:有 2、3:家庭主婦、4:無
##only consider work at market(1).
# %>% mutate(work = if_else(c02z01 == 1, 1, 0))
PSFD2016$work <- as.integer(PSFD2016$c02z01 == 1)
PSFD2016 %>% group_by(age) %>% summarise(work)
library("ggplot2")
work_age <- ggplot(PSFD2016, aes(x=work, y=age)) +
geom_line()+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
PSFD2016 %>% group_by(age) %>% summarise(work_rate = mean(work))
work_RSFD2016 <- PSFD2016 %>% group_by(age) %>% summarise(work_rate = mean(work))
View(work_RSFD2016)
library("ggplot2")
work_age <- ggplot(work_RSFD2016, aes(x=work_rate, y=age)) +
geom_line()+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016, aes(x=work_rate, y=age)) +
geom_line()+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016, aes(x=work_rate, y=age)) +
geom_point()+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016, aes(x=work_rate, y=age)) +
geom_bar()+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016, aes(x=work_rate, y=age)) +
geom_line()+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(y=age), stat=work_rate)+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
library("ggplot2")
work_age <- ggplot(work_RSFD2016, aes(x=work_rate, y=age)) +
geom_line()+
geom_point()
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
library("ggplot2")
work_age <- ggplot(work_RSFD2016, aes(x=work_rate, y=age)) +
geom_line()+
geom_point()+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
?ggplot2
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(x=work_rate, y=age), stat = "identity"))+
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(x=work_rate, y=age), stat = "identity")+
labs(title="rate of working against age")+
xlab('work_rate')+
ylab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(x=work_rate, y=age), stat = "identity")+
labs(title="rate of working against age")+
+coord_flip()
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(x=work_rate, y=age), stat = "identity")+
labs(title="rate of working against age")+
coord_flip()+
xlab('work_rate')+
ylab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(y=work_rate, x=age), stat = "identity")+
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(mapping = aes(y=work_rate, x=age), stat = "identity")+
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')+
width=0.5
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(y=work_rate, x=age), stat = "identity")+
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')+
width=0.5
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(y=work_rate, x=age), stat = "identity")+
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(aes(y=work_rate, x=age), stat = "identity",width = 0.5)+
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
geom_bar(mapping = aes(y=work_rate, x=age), stat = "identity",width = 0.5)+
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
#geom_bar(mapping = aes(y=work_rate, x=age), stat = "identity",width = 0.5)+
geom_line(mapping = aes(y=work_rate, x=age)) +
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
rm()
rm(list = ls())
# import data
library(haven)
library('dplyr')
PSFD2016 <- read_sav("C:/Users/user/Downloads/C00320_3/RCI2016_v201811_spss.sav")
head(PSFD2016)
rm(list = ls())
print("HelloWorld")
add_two_number <- function(intA,intB ) {
return(intA + intB)
}
add_two_number(2,3)
# import data
library(haven)
library('dplyr')
PSFD2016 <- read_sav("C:/Users/user/Downloads/C00320_3/RCI2016_v201811_spss.sav")
head(PSFD2016)
#check if 訪問年分(x02) == 2016
PSFD2016[PSFD2016$x02 != 2016,]
#calculate age
##a02a01:請問你是民國幾年出生
##訪問年分=2016 = 民國105年)
PSFD2016$age <- 105 - PSFD2016$a02a01 + 1
#c02z01:請問你目前有工作嗎? 1:有 2、3:家庭主婦、4:無
##only consider work at market(1).
# %>% mutate(work = if_else(c02z01 == 1, 1, 0))
PSFD2016$work <- as.integer(PSFD2016$c02z01 == 1)
work_RSFD2016 <- PSFD2016 %>% group_by(age) %>% summarise(work_rate = mean(work))
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
#geom_bar(mapping = aes(y=work_rate, x=age), stat = "identity",width = 0.5)+
geom_line(mapping = aes(y=work_rate, x=age)) +
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
rm(list = ls())
mu0 <- 10
mu1 <- 9
var0 <- 1
var1 <- 2
var01 <- 0.6
c <- 1
library('dplyr')
library('data.table')
simulation <- data.table(
eplison0 = rnorm(10^7, 0, var0),
eplison1 = rnorm(10^7, 0, var1)
)
head(simulation)
# W0 = u0 + eplison0
# w1 = u1 + eplison1
simulation[, w0:= mu0+eplison0]
simulation[, w1:= mu1+eplison1]
head(simulation)
# Migrate(I=1) if w1>(w0+c)
simulation[w1-w0-c>0, I:= 1]
simulation[w1-w0-c<=0, I:= 0]
head(simulation)
conditionmean_bydata<- simulation[,
.(condi_w0_bydata = mean(w0), #condi_w0_bydata is E(w0|I) cal by data.
condi_w1_bydata = mean(w1), #condi_w1_bydata is E(w1|I) cal by data.
Q0_bydata = mean(eplison0), #Q0_bydata is E(eplison0|I) cal by data
Q1_bydata = mean(eplison1)),#Q1_bydata is E(eplison1|I) cal by data
by = I]
conditionmean_bydata
# The first row(I=1) is what we want to know.
# get z by data
simulation[, v := eplison1-eplison0]
val_v <- simulation[, var(v)]
z <- (mu0-mu1+c)/val_v
# where we know E(w1|I) = mu1 + var1*E((eplison1/var1)|(v/var_v > z))
# and E(w0|I) = mu0 + var0*E((eplison0/var0)|(v/var_v > z))
simulation[v/var(v) > z, condi:= 1]
simulation[v/var(v) <= z, condi:= 0]
E1 <- simulation[,mu1+ var1*mean(eplison1/var1), by = condi]
conditionmean_bydRHD<- simulation[,
# condi_w0_byRHS is E(w0|I) cal by E(w0|I) = mu0 + var0*E((eplison0/var0)|(v/var_v > z))
.(condi_w0_byRHS = mu0+ var0*mean(eplison0/var0),
# condi_w1_byRHS is E(w1|I) cal by E(w1|I) = mu1 + var1*E((eplison1/var1)|(v/var_v > z))
condi_w1_byRHS = mu1+ var1*mean(eplison1/var1)),
by = condi]
# Q0_byRHS is E(eplison0|I) cal by calculation(E(w0|I)-mu0)
conditionmean_bydRHD[,Q0_byRHS := (condi_w0_byRHS - mu0)]
# Q1_byRHS is E(eplison1|I) cal by calculation(E(w1|I)-mu1)
conditionmean_bydRHD[,Q1_byRHS := (condi_w1_byRHS - mu1)]
conditionmean_bydRHD
# E(w1,I=1) & E(w0,I=0) is observed in real world,
# E(w1,I=0) & E(w0,I=1) is not observed in real world,
# import data
library(haven)
library('dplyr')
#PSFD2016 <- read_sav("C:/Users/user/Downloads/C00320_3/RCI2016_v201811_spss.sav")
PSFD2016 <- read_sav("C:/Users/user/Downloads/C00377_1/psfd_rr2020_v202208_spss.sav")
head(PSFD2016)
View(PSFD2016)
#check if 訪問年分(x02) == 2016
#PSFD2016[PSFD2016$x02 != 2016,]
PSFD2016[PSFD2016$x02 != 2020,]
#calculate age
##a02a01:請問你是民國幾年出生
##訪問年分=2016 = 民國105年)
#PSFD2016$age <- 105 - PSFD2016$a02a01 + 1
PSFD2016$age <- 109 - PSFD2016$a02a + 1
#c02z01:請問你目前有工作嗎? 1:有 2、3:家庭主婦、4:無
##only consider work at market(1).
# %>% mutate(work = if_else(c02z01 == 1, 1, 0))
#PSFD2016$work <- as.integer(PSFD2016$c02z01 == 1)
PSFD2016$work <- as.integer(PSFD2016$w03 == 1)
work_RSFD2016 <- PSFD2016 %>% group_by(age) %>% summarise(work_rate = mean(work))
library("ggplot2")
work_age <- ggplot(work_RSFD2016) +
#geom_bar(mapping = aes(y=work_rate, x=age), stat = "identity",width = 0.5)+
geom_line(mapping = aes(y=work_rate, x=age)) +
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
# import data
library(haven)
library('dplyr')
PSFD2020 <- read_sav("C:/Users/user/Downloads/C00377_1/psfd_rr2020_v202208_spss.sav")
head(PSFD2020)
#check if 訪問年分(x02) == 2020
PSFD2020[PSFD2020$x02 != 2020,]
#calculate age
##a02a:請問你是民國幾年出生
##訪問年分=2020 = 民國109年)
PSFD2020$age <- 109 - PSFD2020$a02a + 1
#w03:請問你目前有工作嗎? 1:有 2、3:家庭主婦、4:無
##only consider work at market(1).
PSFD2020$work <- as.integer(PSFD2020$w03 == 1)
work_RSFD2020 <- PSFD2020 %>% group_by(age) %>% summarise(work_rate = mean(work))
library("ggplot2")
work_age <- ggplot(work_RSFD2020) +
#geom_bar(mapping = aes(y=work_rate, x=age), stat = "identity",width = 0.5)+
geom_line(mapping = aes(y=work_rate, x=age)) +
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
rm(list = ls())
# import data
library(haven)
library('dplyr')
PSFD2020 <- read_sav("C:/Users/user/Downloads/C00377_1/psfd_rr2020_v202208_spss.sav")
head(PSFD2020)
#check if 訪問年分(x02) == 2020
PSFD2020[PSFD2020$x02 != 2020,]
#calculate age
##a02a:請問你是民國幾年出生
##訪問年分=2020 = 民國109年)
PSFD2020$age <- 109 - PSFD2020$a02a + 1
#w03:請問你目前有工作嗎? 1:有 2、3:家庭主婦、4:無
##only consider work at market(1).
PSFD2020$work <- as.integer(PSFD2020$w03 == 1)
work_RSFD2020 <- PSFD2020 %>% group_by(age) %>% summarise(work_rate = mean(work))
library("ggplot2")
work_age <- ggplot(work_RSFD2020) +
#geom_bar(mapping = aes(y=work_rate, x=age), stat = "identity",width = 0.5)+
geom_line(mapping = aes(y=work_rate, x=age)) +
labs(title="rate of working against age")+
coord_flip()+
ylab('work_rate')+
xlab('age ')
plot(work_age)
library ( stats )
library ( tidyverse )
optimfunc <- function ( param ) {
sig1 <-param [1]
sig2 <-param [2]
eplison1 = rnorm (2 ,0 , sig1 ^2) #N=2
eplison2 = rnorm (2 ,0 , sig2 ^2)
y = eplison1 + eplison2
log( sig1 ^2+ sig2 ^2) +log (2*pi ) +(1 /(2*( sig1 ^2+ sig2 ^2) ) )*sum ( y ^2)
}
param <-c(2 ,1) # initial values
optimfunc.result <-optim ( param , q14 , method ="L-BFGS -B", hessian = TRUE )
library ( stats )
library ( tidyverse )
optimfunc <- function ( param ) {
sig1 <-param [1]
sig2 <-param [2]
eplison1 = rnorm (2 ,0 , sig1 ^2) #N=2
eplison2 = rnorm (2 ,0 , sig2 ^2)
y = eplison1 + eplison2
log( sig1 ^2+ sig2 ^2) +log (2*pi ) +(1 /(2*( sig1 ^2+ sig2 ^2) ) )*sum ( y ^2)
}
param <-c(2 ,1) # initial values
optimfunc.result <-optim ( param , optimfunc , method ="L-BFGS -B", hessian = TRUE )
library ( stats )
library ( tidyverse )
optimfunc <- function ( param ) {
sig1 <-param [1]
sig2 <-param [2]
eplison1 = rnorm (2 ,0 , sig1 ^2) #N=2
eplison2 = rnorm (2 ,0 , sig2 ^2)
y = eplison1 + eplison2
log( sig1 ^2+ sig2 ^2) +log (2*pi ) +(1 /(2*( sig1 ^2+ sig2 ^2) ) )*sum ( y ^2)
}
param <-c(2 ,1) # initial values
optimfunc.result <-optim ( param , optimfunc , method ="L-BFGS-B", hessian = TRUE )
optimfunc.result$par
## set value
mu0 <- 10
mu1 <- 9
var0 <- 1
var1 <- 2
var01 <- 0.6
beta1 <- 1
beta2 <- 2
library('dplyr')
library('data.table')
simulation <- data.table(
eplison0 = rnorm(10^7, 0, var0),
eplison1 = rnorm(10^7, 0, var1),
x1 =  rnorm(10^7, 0, var0),
x2 =  rnorm(10^7, 0, var1)
)
## create W0 and W1
# W0 = u0 + beta1*x1 + eplison0
# w1 = u1 + beta1*x1+  beta2*x2 eplison1
simulation[, w0:= mu0 + beta1*x1 +eplison0]
simulation[, w1:= mu1 + beta1*x1 + beta2*x2 + eplison1]
## create W0 and W1
# W0 = u0 + beta1*x1 + eplison0
# w1 = u1 + beta1*x1+  beta2*x2 eplison1
simulation[, w0:= mu0 + beta1*x1 +eplison0]
simulation[, w1:= mu1 + beta1*x1 + beta2*x2 + eplison1]
View(simulation)
simulation[, .(mean(w0),mean(w1),mean(x1),mean(x2))]
library('dplyr')
library('data.table')
simulation <- data.table(
eplison0 = rnorm(10^7, 0, var0),
eplison1 = rnorm(10^7, 0, var1),
x1 =  rnorm(10^7, 1, var0),
x2 =  rnorm(10^7, 1, var1)
)
## create W0 and W1
# W0 = u0 + beta1*x1 + eplison0
# w1 = u1 + beta1*x1+  beta2*x2 eplison1
simulation[, w0:= mu0 + beta1*x1 +eplison0]
simulation[, w1:= mu1 + beta1*x1 + beta2*x2 + eplison1]
simulation[, .(mean(w0),mean(w1),mean(x1),mean(x2))]
# create D
simulation[w1>w0, D:= 1]
simulation[w1<w0, D:= 0]
View(simulation)
# create D
simulation[w1>w0, D:= 1]
simulation[w1<=w0, D:= 0]
meanvar <-sqrt ( var0 ^2+ var1 ^2 -2* var01 )
rho <- var01 /( var0 * var1 )
sigma <-rbind (c( var0 ^2 , var01 ) ,c( var01 , var1 ^2) )
test <- data.table(
mvrnorm ( n =10^7 , mu = c(0,0) , Sigma = sigma)
)
install.packages("MASS")
test <- data.table(
mvrnorm ( n =10^7 , mu = c(0,0) , Sigma = sigma)
)
library(MASS)
test <- data.table(
mvrnorm ( n =10^7 , mu = c(0,0) , Sigma = sigma)
)
View(test)
library('dplyr')
library('data.table')
library(MASS)
simulation <- data.table(
mvrnorm ( n =10^7 , mu = c(0,0) , Sigma = sigma),
x1 =  rnorm(10^7, 1, var0),
x2 =  rnorm(10^7, 1, var1)
)
View(simulation)
library('dplyr')
library('data.table')
library(MASS)
simulation <- data.table(
mvrnorm ( n =10^7 , mu = c(0,0) , Sigma = sigma),
x1 =  rnorm(10^7, 1, var0),
x2 =  rnorm(10^7, 1, var1)
)
colnames ( simulation ) <-c("eplison0", "eplison1", "x1", "x2")
View(simulation)
## create W0 and W1
# W0 = u0 + beta1*x1 + eplison0
# w1 = u1 + beta1*x1+  beta2*x2 eplison1
simulation[, w0:= mu0 + beta1*x1 +eplison0]
simulation[, w1:= mu1 + beta1*x1 + beta2*x2 + eplison1]
simulation[, .(mean(w0),mean(w1),mean(x1),mean(x2))]
sigmav <-sqrt ( var0 ^2+ var1 ^2 -2* var01 )
rho <- var01 /( var0 * var1 )
sigma <-rbind (c( var0 ^2 , var01 ) ,c( var01 , var1 ^2) )
# create D
simulation[w1>w0, D:= 1]
simulation[w1<=w0, D:= 0]
#create p(x)
prop_x = 1 - pnorm (( mu0 - mu1 - beta2*x2 )/ sigmav ,0 ,1)
# create D
simulation[w1>w0, D:= 1]
simulation[w1<=w0, D:= 0]
#create p(x)
simulation[, prop_x := 1 - pnorm (( mu0 - mu1 - beta2*x2 )/ sigmav ,0 ,1)]
logit <-glm(D~X2 , data = simulation ,
family = binomial ( link =" logit ") )
logit <-glm(D~X2 , data = simulation , family = binomial ( link =" logit ") )
logit <-glm(D~X2 , data = simulation , family = binomial ( link ="logit") )
logit <-glm(D~x2 , data = simulation , family = binomial ( link ="logit") )
simulation[, propensity_score := predict(logit, type ="response")]
cor ( simulation$prop_x , simulation$propensity_score )
# create True D
simulation[w1>w0, D:= 1]
simulation[w1<=w0, D:= 0]
#create p(x)
simulation[, propensity_score_formula := 1 - pnorm (( mu0 - mu1 - beta2*x2 )/ sigmav ,0 ,1)]
logit <-glm(D~x2 , data = simulation , family = binomial ( link ="logit") )
simulation[, propensity_score_logit := predict(logit, type ="response")]
cor ( simulation$propensity_score_formula ,simulation$propensity_score_logit )
# create weight by formula
simulation[D==1, weight_formula := 1/propensity_score_formula]
simulation[D==0, weight_formula:= 1/(1-propensity_score_formula)]
# create weight by logit setimate
simulation[D==1, weight_logit := 1/propensity_score_logit]
simulation[D==0, weight_logit:= 1/(1-propensity_score_logit)]
#create actual wage
simulation[D==1, wage := w1]
simulation[D==0, wage := w0]
View(simulation)
ipw_formula <-lm( wage ~D, weights = weight_formula , data = simulation )
summary ( ipw_formula )
ipw$coefficients
ipw_formula <-lm( wage ~D, weights = weight_formula , data = simulation )
summary ( ipw_formula )
ipw_formula$coefficients
ipw_logit <-lm( wage~D, weights = weight_logit , data = simulation )
summary(ipw_logit)
ipw_logit$coefficients
wage_to_D_OLS <-lm( wage ~D, data = simulation )
summary (wage_to_D_OLS)
wage_to_D_OLS$ coefficients
wage_to_D_and_x2_OLS <-lm( wage~D+x2 , data = simulation )
summary ( wage_to_D_and_x2_OLS )
wage_to_D_and_x2_OLS <-lm( wage~D+x2 , data = simulation )
summary ( wage_to_D_and_x2_OLS )
wage_to_D_and_x2_OLS$ coefficients
